{
	"info": {
		"_postman_id": "683e3dcc-58c7-4aa7-ac9a-d178e729de58",
		"name": "Dummyjson",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41080144"
	},
	"item": [
		{
			"name": "DynamicImage",
			"item": [
				{
					"name": "GenerateSquareImage",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/image/150",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"image",
								"150"
							]
						}
					},
					"response": []
				},
				{
					"name": "CustomWidth/Height",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/image/200x100",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"image",
								"200x100"
							]
						}
					},
					"response": []
				},
				{
					"name": "CustomText",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/image/400x200/008080/ffffff?text=Hello+Peter",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"image",
								"400x200",
								"008080",
								"ffffff"
							],
							"query": [
								{
									"key": "text",
									"value": "Hello+Peter"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CustomBackgrounAndTextColor",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/image/400x200/282828",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"image",
								"400x200",
								"282828"
							]
						}
					},
					"response": []
				},
				{
					"name": "DifferentFileFormats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/image/400x200?type=webp&text=I+am+a+webp+image",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"image",
								"400x200"
							],
							"query": [
								{
									"key": "type",
									"value": "webp"
								},
								{
									"key": "text",
									"value": "I+am+a+webp+image"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CustomFontFamily",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/image/400x200/282828?fontFamily=pacifico&text=I+am+a+pacifico+font",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"image",
								"400x200",
								"282828"
							],
							"query": [
								{
									"key": "fontFamily",
									"value": "pacifico"
								},
								{
									"key": "text",
									"value": "I+am+a+pacifico+font"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CustomFontSize",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/image/400x200/008080/ffffff?text=Hello+Peter!&fontSize=16",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"image",
								"400x200",
								"008080",
								"ffffff"
							],
							"query": [
								{
									"key": "text",
									"value": "Hello+Peter!"
								},
								{
									"key": "fontSize",
									"value": "16"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateIdenticon",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/icon/abc123/150",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"icon",
								"abc123",
								"150"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "LoginAndGetTokens",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"emilys\",\n    \"password\": \"emilyspass\",\n    \"credentials\": \"include\"\n}\n  \n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAuthUser",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "RefreshTokens",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJlbWlseXMiLCJlbWFpbCI6ImVtaWx5LmpvaG5zb25AeC5kdW1teWpzb24uY29tIiwiZmlyc3ROYW1lIjoiRW1pbHkiLCJsYXN0TmFtZSI6IkpvaG5zb24iLCJnZW5kZXIiOiJmZW1hbGUiLCJpbWFnZSI6Imh0dHBzOi8vZHVtbXlqc29uLmNvbS9pY29uL2VtaWx5cy8xMjgiLCJpYXQiOjE3Mzc2MTY4MzAsImV4cCI6MTc0MDIwODgzMH0.1MPgftDCI3RPbO39qYYU342VLM6s4dqJ3SRaK3nm8Og\", \n    \"expiresInMins\": 30 \n\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "GetAllProducts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetASingleProduct",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchProducts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/search?q=phone",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "phone"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Limit&SkipProducts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products?limit=10&skip=10&select=title,price",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "title,price"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SortProducts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products?sortBy=title&order=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "title"
								},
								{
									"key": "order",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAllProductsCategories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProductsCategoryist",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/category-list",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"category-list"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPproductsByCategory",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/category/smartphones",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"category",
								"smartphones"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddAProduct",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"title\": \"Bebro iškamša\",\n    \"description\": \"Nauja Bebro iškamša\",\n    \"category\": \"HOME\",\n    \"price\": 999.99,\n    \"discountPercentage\": 10.17,\n    \"rating\": 9.94,\n    \"stock\": 3,\n    \"tags\": [\n        \"HOME\",\n        \"mascara\"\n    ],\n    \"brand\": \"Arvydas\",\n    \"sku\": \"RCH45Q1A\",\n    \"weight\": 2,\n    \"dimensions\": {\n        \"width\": 50.17,\n        \"height\": 80.43,\n        \"depth\": 40.01\n    },\n    \"warrantyInformation\": \"lifetime warranty\",\n    \"shippingInformation\": \"Ships in 3 month\",\n    \"availabilityStatus\": \"Low Stock\",\n    \"reviews\": [\n        {\n            \"rating\": 2,\n            \"comment\": \"Very happy with my purchase!\",\n            \"date\": \"2025-01-23T08:56:21.618Z\",\n            \"reviewerName\": \"Monika\",\n            \"reviewerEmail\": \"monika@monika.com\"\n        },\n        {\n            \"rating\": 2,\n            \"comment\": \"Just as described!\",\n            \"date\": \"2024-05-23T08:56:21.618Z\",\n            \"reviewerName\": \"Nolan Gonzalez\",\n            \"reviewerEmail\": \"nolan.gonzalez@x.dummyjson.com\"\n        },\n        {\n            \"rating\": 5,\n            \"comment\": \"Very satisfied!\",\n            \"date\": \"2024-05-23T08:56:21.618Z\",\n            \"reviewerName\": \"Scarlett Wright\",\n            \"reviewerEmail\": \"scarlett.wright@x.dummyjson.com\"\n        }\n    ],\n    \"returnPolicy\": \"30 days return policy\",\n    \"minimumOrderQuantity\": 24,\n    \"meta\": {\n        \"createdAt\": \"2024-05-23T08:56:21.618Z\",\n        \"updatedAt\": \"2024-05-23T08:56:21.618Z\",\n        \"barcode\": \"9164035109868\",\n        \"qrCode\": \"https://assets.dummyjson.com/public/qr-code.png\"\n    },\n    \"images\": [\n        \"https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png\"\n    ],\n    \"thumbnail\": \"https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateAProduct",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Bebras\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAProduct",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Carts",
			"item": [
				{
					"name": "GetAllCarts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/carts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetASingleCart",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/carts/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"carts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCartsByUser",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/carts/user/5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"carts",
								"user",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddACart",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/carts/user/5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"carts",
								"user",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateACart",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"products\": [\n      {\n        \"id\": 1,\n        \"quantity\": 1\n      }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/carts/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"carts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteACart",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/carts/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"carts",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Recipes",
			"item": [
				{
					"name": "GetAllRecipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/recipes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetASingleRecipe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/recipes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchRecipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/recipes/search?q=Margherita",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"recipes",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "Margherita"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Limit&SkipRecipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/recipes?limit=10&skip=10&select=name,image",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"recipes"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "name,image"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SortRecipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/recipes?sortBy=name&order=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"recipes"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "name"
								},
								{
									"key": "order",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAllRecipesTags",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/recipes/tags",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"recipes",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetRecipesByTag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/recipes/tags",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"recipes",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetRecipesByMeal",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/recipes/meal-type/snack",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"recipes",
								"meal-type",
								"snack"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "GetAllUsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "LoginUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"emilys\",\n    \"password\": \"emilyspass\",\n    \"credentials\": \"include\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAuthUser",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credentials\": \"include\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetASingleUser",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchUsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/search?q=John",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "John"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "FilterUsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/filter?key=hair.color&value=Brown",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"filter"
							],
							"query": [
								{
									"key": "key",
									"value": "hair.color"
								},
								{
									"key": "value",
									"value": "Brown"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Limit&SkipUsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?limit=5&skip=10&select=firstName,age",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "firstName,age"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SortUsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?sortBy=firstName&order=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "firstName"
								},
								{
									"key": "order",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAllPostsTags",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts/tags",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPostsTagList",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts/tag-list",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								"tag-list"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPostByTag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts/tag/life",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								"tag",
								"life"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUserscarts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/6/carts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"6",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUsersPosts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/5/posts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"5",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUsersToDos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/5/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"5",
								"todos"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddAUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Monika\",\n    \"lastName\": \"Celiesiene\",\n    \"maidenName\": \"Patricija\",\n    \"age\": 33,\n    \"gender\": \"female\",\n    \"email\": \"monika@monika.com\",\n    \"phone\": \"+88 666-666-6666\",\n    \"username\": \"monika\",\n    \"password\": \"monikapass\",\n    \"birthDate\": \"1991-06-08\",\n    \"image\": \"https://dummyjson.com/icon/emilys/128\",\n    \"bloodGroup\": \"O-\",\n    \"height\": 160.00,\n    \"weight\": 48.16,\n    \"eyeColor\": \"Green\",\n    \"hair\": {\n        \"color\": \"Brown\",\n        \"type\": \"who knows\"\n    },\n    \"ip\": \"42.48.100.32\",\n    \"address\": {\n        \"address\": \"Birstonas\",\n        \"city\": \"Birstonas\",\n        \"state\": \"Kauno rajonas\",\n        \"stateCode\": \"KR\",\n        \"postalCode\": \"59212\",\n        \"coordinates\": {\n            \"lat\": -77.16213,\n            \"lng\": -92.084824\n        },\n        \"country\": \"Lietuva\"\n    },\n    \"macAddress\": \"47:fa:41:18:ec:eb\",\n    \"university\": \"BIT\",\n    \"bank\": {\n        \"cardExpire\": \"03/26\",\n        \"cardNumber\": \"9289760655481815\",\n        \"cardType\": \"Elo\",\n        \"currency\": \"CNY\",\n        \"iban\": \"YPUXISOBI7TTHPK2BR3HAIXL\"\n    },\n    \"company\": {\n        \"department\": \"Engineering\",\n        \"name\": \"Dooley, Kozey and Cronin\",\n        \"title\": \"Sales Manager\",\n        \"address\": {\n            \"address\": \"263 Tenth Street\",\n            \"city\": \"San Francisco\",\n            \"state\": \"Wisconsin\",\n            \"stateCode\": \"WI\",\n            \"postalCode\": \"37657\",\n            \"coordinates\": {\n                \"lat\": 71.814525,\n                \"lng\": -161.150263\n            },\n            \"country\": \"United States\"\n        }\n    },\n    \"ein\": \"977-175\",\n    \"ssn\": \"900-590-289\",\n    \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36\",\n    \"crypto\": {\n        \"coin\": \"Bitcoin\",\n        \"wallet\": \"0xb9fc2fe63b2a6c003f1c324c3bfa53259162181a\",\n        \"network\": \"Ethereum (ERC20)\"\n    },\n    \"role\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateAUser",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Monika\",\n    \"lastName\": \"Celiesiene\",\n    \"maidenName\": \"Patricija\",\n    \"age\": 33,\n    \"gender\": \"female\",\n    \"email\": \"monika@monika.com\",\n    \"phone\": \"+88 666-666-6666\",\n    \"username\": \"monika\",\n    \"password\": \"monikapass\",\n    \"birthDate\": \"1991-06-08\",\n    \"image\": \"https://dummyjson.com/icon/emilys/128\",\n    \"bloodGroup\": \"O-\",\n    \"height\": 160.00,\n    \"weight\": 48.16,\n    \"eyeColor\": \"Green\",\n    \"hair\": {\n        \"color\": \"Brown\",\n        \"type\": \"who knows\"\n    },\n    \"ip\": \"42.48.100.32\",\n    \"address\": {\n        \"address\": \"Birstonas\",\n        \"city\": \"Birstonas\",\n        \"state\": \"Kauno rajonas\",\n        \"stateCode\": \"KR\",\n        \"postalCode\": \"59212\",\n        \"coordinates\": {\n            \"lat\": -77.16213,\n            \"lng\": -92.084824\n        },\n        \"country\": \"Lietuva\"\n    },\n    \"macAddress\": \"47:fa:41:18:ec:eb\",\n    \"university\": \"BIT\",\n    \"bank\": {\n        \"cardExpire\": \"03/26\",\n        \"cardNumber\": \"9289760655481815\",\n        \"cardType\": \"Elo\",\n        \"currency\": \"CNY\",\n        \"iban\": \"YPUXISOBI7TTHPK2BR3HAIXL\"\n    },\n    \"company\": {\n        \"department\": \"Engineering\",\n        \"name\": \"Dooley, Kozey and Cronin\",\n        \"title\": \"Sales Manager\",\n        \"address\": {\n            \"address\": \"263 Tenth Street\",\n            \"city\": \"San Francisco\",\n            \"state\": \"Wisconsin\",\n            \"stateCode\": \"WI\",\n            \"postalCode\": \"37657\",\n            \"coordinates\": {\n                \"lat\": 71.814525,\n                \"lng\": -161.150263\n            },\n            \"country\": \"United States\"\n        }\n    },\n    \"ein\": \"977-175\",\n    \"ssn\": \"900-590-289\",\n    \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36\",\n    \"crypto\": {\n        \"coin\": \"Bitcoin\",\n        \"wallet\": \"0xb9fc2fe63b2a6c003f1c324c3bfa53259162181a\",\n        \"network\": \"Ethereum (ERC20)\"\n    },\n    \"role\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAUser",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "GetALLPosts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetASinglePost",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchPosts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts/search?q=love",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "love"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Limit&SkipPosts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts?limit=10&skip=10&select=title,reactions,userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "title,reactions,userId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SortPosts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts?sortBy=title&order=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "title"
								},
								{
									"key": "order",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPostByUserId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts/user/5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								"user",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPostsComments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts/1/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddAPost",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n    \"title\": \"His mother had always beat him\",\n    \"body\": \"His mother had always taught him not to ever think of himself as better than others. He'd never  tried to live by this motto. He always looked down on those who were less fortunate or who had less money than him\",\n    \"tags\": [\n        \"history\",\n        \"american\",\n        \"crime\"\n    ],\n    \"reactions\": {\n        \"likes\": 92,\n        \"dislikes\": 75\n    },\n    \"views\": 205,\n    \"userId\": 121\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/posts/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateAPost",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"title\": \"New Post\",\n    \"body\": \"This is a new post\",\n    \"tags\": [\n        \"american\",\n        \"crime\"\n    ],\n    \"reactions\": {\n        \"likes\": 1,\n        \"dislikes\": 0\n    },\n    \"views\": 5,\n    \"userId\": 51\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/posts/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAPost",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "GetAllComments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check number of comments for Post ID = 46\", () => {",
									"    const responseJson = pm.response.json(); // Parsina JSON atsakymą",
									"",
									"    // Patikrinkite, ar 'comments' masyvas egzistuoja",
									"    pm.expect(responseJson).to.have.property('comments');",
									"    const comments = responseJson.comments;",
									"",
									"    // Patikrinkite, ar 'comments' yra masyvas",
									"    pm.expect(comments).to.be.an('array');",
									"",
									"    // Filtruokite komentarus pagal postId",
									"    const filteredComments = comments.filter(comment => comment.postId === 46);",
									"",
									"    // Patikrinkite, kiek komentarų turi Post ID 46",
									"    pm.expect(filteredComments.length).to.be.greaterThan(0); // Pvz., bent vienas komentaras",
									"    console.log(`Post ID = 46 turi ${filteredComments.length} komentarus.`);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetASingleComment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/comments/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Limit&SkipComments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/comments?limit=10&skip=10&select=body,postId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "skip",
									"value": "10"
								},
								{
									"key": "select",
									"value": "body,postId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCommentByPostId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/comments/post/6",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments",
								"post",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddAComment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"body\": \"This make all sense to me!\",\n   \"postId\": 3,\n   \"userId\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/comments/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateAComment",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"I think I should shift to the moon\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/comments/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAComment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/comments/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Todos",
			"item": [
				{
					"name": "GetAllToDos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetASingleTodo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetARandomTodo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos/random",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"random"
							]
						}
					},
					"response": []
				},
				{
					"name": "Limit&SkipTodos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos?limit=3&skip=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							],
							"query": [
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "skip",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AddATodo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"todo\": \"Use DummyJSON in the project\",\n    \"completed\": false,\n    \"userId\": 5\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/todos/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateATodo",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"completed\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/todos/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteATodo",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Quotes",
			"item": [
				{
					"name": "GetAllQuotes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/quotes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"quotes"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetASingleQuote",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/quotes/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"quotes",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetARandomQuote",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/quotes/random",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"quotes",
								"random"
							]
						}
					},
					"response": []
				},
				{
					"name": "Limit&SkipQuotes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/quotes?limit=3&skip=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"quotes"
							],
							"query": [
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "skip",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"",
					"",
					"pm.test(\"At status kodas 200 arba 201?\", function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
					"});",
					"",
					"",
					"",
					"",
					"pm.test(\"Content-Type is one of json, webp, jpg, or png\", function () {",
					"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/(json|webp|jpg|png)/);",
					"});",
					"",
					"",
					"",
					"",
					"pm.test(\"Ar kiekvienas response JSON neturi 'eror' elemento\", () => {",
					"    const responseJson = pm.response.json(); ",
					"    pm.expect(responseJson).to.not.have.property('error');",
					"});",
					"",
					"",
					"pm.test(\"Save tokens to environment\", function () {",
					"    const jsonData = pm.response.json();",
					"    pm.environment.set(\"AccessToken\", jsonData.token);",
					"    pm.environment.set(\"RefreshToken\", jsonData.refreshToken);",
					"});",
					"",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://dummyjson.com/",
			"type": "string"
		}
	]
}